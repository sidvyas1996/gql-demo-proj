// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      =env("DATABASE_URL")
}

model Person {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  email     String   @unique
  phone     String?
  dob       DateTime?
  gender    String
  dependents Dependent[]
  insurance   Insurance[]
  services   Service[]
  grade     String
  packageID   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  organizations PersonOrganization[]

  tags PersonTag[]
}

model Organization {
  id        Int      @id @default(autoincrement())
  name      String
  address   String
  numberOfEmployees Int
  pan       String
  tan       String
  spoc      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  people PersonOrganization[]
  tags OrganizationTag[]
}

model PersonOrganization {
  id             Int          @id @default(autoincrement())
  personId       Int
  organizationId Int
  person         Person       @relation(fields: [personId], references: [id])
  organization   Organization @relation(fields: [organizationId], references: [id])
  role           String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  // Indexing
  @@index([personId])
  @@index([organizationId])
}

model Service {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  personId    Int
  vendorId    Int
  person    Person    @relation(fields: [personId], references: [id])
  vendor      Vendor  @relation(fields: [vendorId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  // Relationships
  tags ServiceTag[]
}

model Tag {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  services     ServiceTag[]
  InsuranceTag InsuranceTag[]
  organizationTag OrganizationTag[]
  personTag PersonTag[]
  dependentsTag DependentsTag[]
}

model ServiceTag {
  id        Int     @id @default(autoincrement())
  serviceId Int
  tagId     Int
  service   Service @relation(fields: [serviceId], references: [id])
  tag       Tag     @relation(fields: [tagId], references: [id])

  // Indexing
  @@index([serviceId])
  @@index([tagId])
}

model Insurance {
  id        Int      @id @default(autoincrement())
  name      String
  policy    String
  type      String
  personId  Int
  person    Person    @relation(fields: [personId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  tags InsuranceTag[]
}

model InsuranceTag {
  id          Int       @id @default(autoincrement())
  insuranceId Int
  tagId       Int
  insurance   Insurance @relation(fields: [insuranceId], references: [id])
  tag         Tag       @relation(fields: [tagId], references: [id])

  // Indexing
  @@index([insuranceId])
  @@index([tagId])
}

model OrganizationTag {
  id          Int       @id @default(autoincrement())
  orgId       Int
  tagId       Int
  org   Organization @relation(fields: [orgId], references: [id])
  tag         Tag       @relation(fields: [tagId], references: [id])

  // Indexing
  @@index([orgId])
  @@index([tagId])
}
model PersonTag {
  id          Int       @id @default(autoincrement())
  personId    Int
  tagId       Int
  person   Person @relation(fields: [personId], references: [id])
  tag         Tag @relation(fields: [tagId], references: [id])

  // Indexing
  @@index([personId])
  @@index([tagId])
}
model Dependent {
  id        Int       @id @default(autoincrement())
  firstName String
  lastName  String
  relationship String
  dob       DateTime?
  person    Person    @relation(fields: [personId], references: [id])
  personId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tags DependentsTag[]
}

model DependentsTag {
  id          Int       @id @default(autoincrement())
  dependentId Int
  tagId       Int
  dependent   Dependent @relation(fields: [dependentId], references: [id])
  tag         Tag       @relation(fields: [tagId], references: [id])

  // Indexing
  @@index([dependentId])
  @@index([tagId])
}

model Vendor {
  id          Int       @id @default(autoincrement())
  vendorId    Int       @unique
 service      Service[]
 package      Package[]
}

model Package {
  id          Int       @id @default(autoincrement())
  packageId   Int       @unique
  vendor      Vendor    @relation(fields: [packageId], references: [vendorId])
}

generator client {
  provider = "prisma-client-js"
}
